<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.bedu.atko.repository.IClientRepositoryTest" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-07-16T19:16:39" hostname="LAPTOP-6DH68450" time="0.211">
  <properties/>
  <testcase name="Elimina un cliente" classname="org.bedu.atko.repository.IClientRepositoryTest" time="0.092"/>
  <testcase name="Obtiene todos los clientes" classname="org.bedu.atko.repository.IClientRepositoryTest" time="0.069"/>
  <testcase name="Obtiene un cliente por su id" classname="org.bedu.atko.repository.IClientRepositoryTest" time="0.035"/>
  <testcase name="Guarda un cliente" classname="org.bedu.atko.repository.IClientRepositoryTest" time="0.012"/>
  <system-out><![CDATA[2023-07-16T14:16:38.990-05:00  INFO 23096 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.bedu.atko.repository.IClientRepositoryTest]: IClientRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-07-16T14:16:38.992-05:00  INFO 23096 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration org.bedu.atko.AtkoApplication for test class org.bedu.atko.repository.IClientRepositoryTest
Hibernate: 
    select
        r1_0.id,
        r1_0.clients_id,
        r1_0.description,
        r1_0.professional_id 
    from
        reviews r1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.area_trabajo,
        p1_0.category_id,
        p1_0.edad,
        p1_0.email,
        p1_0.name,
        p1_0.telefono 
    from
        professionals p1_0
Hibernate: 
    insert 
    into
        clients
        (edad,email,name,telefono) 
    values
        (?,?,?,?)
Hibernate: 
    insert 
    into
        clients
        (edad,email,name,telefono) 
    values
        (?,?,?,?)
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    delete 
    from
        clients 
    where
        id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    insert 
    into
        clients
        (edad,email,name,telefono) 
    values
        (?,?,?,?)
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.edad,
        c1_0.email,
        c1_0.name,
        c1_0.telefono 
    from
        clients c1_0 
    where
        c1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
